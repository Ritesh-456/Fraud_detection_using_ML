/* Add this rule or modify the existing one if you put it elsewhere */
#auth-forms {
    display: flex;
    /* Make it a flex container */
    gap: 10px;
    /* Add space between the flex items (the buttons) */
    align-items: center;
    /* Vertically center the buttons */
}

/* Rest of your existing style.css code below this */

:root {
    --primary-color: #2563eb;
    --danger-color: #dc2626;
    --success-color: #16a34a;
    /* Light mode safe color (green) */
    --warning-color: #d97706;
    /* Light mode warning color (orange/yellow) */
    --info-color: #0e7490;
    /* Light mode info color (teal/cyan) */
    --text-color: #374151;
    --text-light: #6b7280;
    --border-color: #d1d5db;
    --background-color: #f3f4f6;
    --card-background: #ffffff;
    --shadow-color: rgba(0, 0, 0, 0.1);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

body {
    background-color: var(--background-color);
    min-height: 100vh;
    padding: 2rem;
    color: var(--text-color);
    /* Default text color for body */
}

/* Dark Mode Colors */
body.dark-mode {
    --primary-color: #60a5fa;
    /* Lighter blue for dark background */
    --danger-color: #f87171;
    /* Lighter red */
    --success-color: #4ade80;
    /* Dark mode safe color (green) */
    --warning-color: #f59e0b;
    /* Warm amber/yellow for warning variable in dark mode (used for border/badge text) */
    --info-color: #22d3ee;
    /* Dark mode info color (lighter cyan) */
    --text-color: #d1d5db;
    /* Light gray text for general use in dark mode */
    --text-light: #9ca3af;
    /* Slightly darker light gray text */
    --border-color: #4b5563;
    /* Darker border */
    --background-color: #1f2937;
    /* Dark background */
    --card-background: #374151;
    /* Darker card background */
    --shadow-color: rgba(0, 0, 0, 0.3);
    /* Slightly more opaque shadow */
}

.container {
    max-width: 1200px;
    margin: 0 auto;
}

.header {
    text-align: center;
    margin-bottom: 1rem;
    /* Reduced margin to make space for message area */
    padding: 1.5rem;
    background: var(--card-background);
    /* Uses card background variable */
    border-radius: 10px;
    box-shadow: 0 4px 6px var(--shadow-color);
    /* Uses shadow color variable */
    position: relative;
    /* Default layout for wider screens: text centered, auth absolute */
    display: block;
    /* Ensure block display by default */
}

.header h1 {
    color: var(--primary-color);
    /* Uses primary color variable */
    margin-bottom: 0.5rem;
    font-size: 2rem;
}

.header p {
    color: var(--text-light);
    /* Uses text-light variable */
    font-size: 1.1rem;
    margin-bottom: 1rem;
}

/* Auth Section Styles */
.auth-section {
    position: absolute;
    /* Default to absolute positioning on large screens */
    top: 1.5rem;
    /* Adjusted top for better alignment with padding */
    right: 1.5rem;
    /* Adjusted right for better alignment with padding */
    display: flex;
    align-items: center;
    gap: 10px;
    /* Space between user status and auth forms div */
    /* Default width and justification for absolute positioning */
    width: auto;
    justify-content: flex-end;
}

#user-status {
    font-size: 1rem;
    color: var(--text-color);
    /* Uses the main text color variable */
    display: flex;
    align-items: center;
    gap: 5px;
}

/* Changed ID here to user-identifier */
#user-identifier {
    font-weight: bold;
    color: var(--primary-color);
    /* Uses the primary color variable */
}

.button-small {
    background: var(--primary-color);
    color: white;
    padding: 0.4rem 0.8rem;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 0.9rem;
    transition: background-color 0.2s ease;
    margin-top: 0;
    display: inline-block;
}

.button-small:hover {
    background-color: #1d4ed8;
    /* Light mode specific hover */
}

/* Dark mode hover for primary button */
body.dark-mode .button-small:hover {
    background-color: #3b82f6;
    /* Slightly lighter blue for dark mode hover */
}

/* --- Message Area Styles --- */
.message-area {
    margin: 1rem auto;
    /* Center the message area */
    max-width: 1200px;
    /* Match container width */
    padding: 0 2rem;
    /* Match body padding */
    min-height: 20px;
    /* Give it some minimum height */
}

.message {
    padding: 10px;
    margin-bottom: 10px;
    /* Space between multiple messages if they appear */
    border-radius: 5px;
    font-size: 0.9rem;
    word-break: break-word;
    /* Prevent overflow */
}

.message.info {
    background-color: #e0f7fa;
    /* Light cyan */
    color: var(--info-color);
    border: 1px solid #b2ebf2;
    /* Slightly darker cyan border */
}

body.dark-mode .message.info {
    background-color: #0f343d;
    /* Darker background for info in dark mode */
    color: var(--info-color);
    border-color: #00bcd4;
    /* Cyan border */
}


.message.success {
    background-color: #dcfce7;
    /* Light green */
    color: var(--success-color);
    border: 1px solid var(--success-color);
    /* Added border color */
}

body.dark-mode .message.success {
    background-color: #14532d;
    /* Darker background for success in dark mode */
    color: var(--success-color);
    border-color: var(--success-color);
}

.message.warning {
    background-color: #fef3c7;
    /* Light yellow */
    color: var(--warning-color);
    border: 1px solid var(--warning-color);
    /* Added border color */
}

body.dark-mode .message.warning {
    background-color: #78350f;
    /* Darker background for warning in dark mode */
    color: var(--warning-color);
    border-color: var(--warning-color);
}

.message.error {
    background-color: #fee2e2;
    /* Light red */
    color: var(--danger-color);
    border: 1px solid var(--danger-color);
}

body.dark-mode .message.error {
    background-color: #7f1d1d;
    /* Darker background for error in dark mode */
    color: var(--danger-color);
    border-color: var(--danger-color);
}


/* Auth Card Styles (Login/Register Forms) */
.auth-card {
    max-width: 400px;
    margin: 2rem auto;
    padding: 2rem;
    background: var(--card-background);
    /* Uses card background variable */
    border-radius: 10px;
    box-shadow: 0 2px 4px var(--shadow-color);
    /* Uses shadow color variable */
}

.auth-card h2 {
    text-align: center;
    margin-bottom: 1.5rem;
    color: var(--primary-color);
    /* Uses primary color variable */
}

.input-group {
    margin-bottom: 1.2rem;
}

.input-group label {
    display: block;
    margin-bottom: 0.6rem;
    color: var(--text-color);
    /* Uses the main text color variable */
    font-weight: bold;
}

.input-group input,
.input-group select {
    /* Added select for filter dropdowns */
    width: 100%;
    padding: 0.8rem;
    border: 1px solid var(--border-color);
    /* Uses border color variable */
    border-radius: 6px;
    font-size: 1rem;
    color: var(--text-color);
    /* Uses the main text color variable */
    background-color: var(--card-background);
    /* Uses card background variable */
}

.input-group input:focus,
.input-group select:focus {
    /* Added select */
    outline: none;
    border-color: var(--primary-color);
    /* Uses primary color variable */
    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    /* Specific focus shadow */
}

/* Dark mode focus shadow */
body.dark-mode .input-group input:focus,
body.dark-mode .input-group select:focus {
    /* Added select */
    box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.2);
    /* Adjust shadow color for dark mode primary */
}


.button {
    display: block;
    width: 100%;
    background: var(--primary-color);
    /* Uses primary color variable */
    color: white;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.2s ease, opacity 0.2s ease;
    margin-top: 1.5rem;
}

button:hover:not(:disabled) {
    background-color: #1d4ed8;
    /* Specific hover color for light mode primary */
}

/* Dark mode hover for primary button */
body.dark-mode button:hover:not(:disabled) {
    background-color: #3b82f6;
    /* Slightly lighter blue for dark mode hover */
}


button:disabled {
    background-color: #9ca3af;
    cursor: not-allowed;
    opacity: 0.7;
}

/* Dark mode disabled button */
body.dark-mode button:disabled {
    background-color: #4b5563;
    /* Uses darker color for disabled in dark mode */
}


.toggle-form {
    text-align: center;
    margin-top: 1rem;
    color: var(--text-light);
    /* Uses text-light variable */
}

.toggle-form span {
    color: var(--primary-color);
    /* Uses primary color variable */
    cursor: pointer;
    text-decoration: underline;
}

.toggle-form span:hover {
    text-decoration: none;
}


/* --- Global Link Color in Dark Mode --- */
/* Applies to all links unless overridden by a more specific rule */
body.dark-mode a {
    color: var(--primary-color);
    /* Set link color to primary color in dark mode */
    text-decoration: underline;
    /* Keep underline for clarity */
}

body.dark-mode a:hover {
    text-decoration: none;
    /* Remove underline on hover */
}


/* Main Content Grid */
.main-content {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;

    /* ADDED: Align items to the start to prevent vertical stretching */
    /* This is the key change for this section */
    align-items: start;
    /* END ADDED */
}


.card {
    background: var(--card-background);
    /* Uses card background variable */
    padding: 1.5rem;
    border-radius: 10px;
    box-shadow: 0 2px 4px var(--shadow-color);
    /* Uses shadow color variable */
}

.card h2 {
    color: var(--primary-color);
    /* Uses primary color variable */
    margin-bottom: 1rem;
    font-size: 1.25rem;
}

.result-card {
    margin-top: 1rem;
    padding: 1rem;
    border-radius: 6px;
    display: none;
    font-size: 0.95rem;
    color: var(--text-color);
}

/* Ensure text color is readable on colored result cards by inheriting */
.result-card h3,
.result-card p,
.result-card .risk-factors li {
    color: inherit;
}


/* --- Result Card State Styles --- */

.result-card.fraud {
    background-color: #fee2e2;
    /* Light theme fraud background */
    border: 1px solid var(--danger-color);
    /* Uses danger color variable */
    color: var(--danger-color);
    /* Text color for fraud in light mode */
}

/* Dark mode overrides for fraud result card */
body.dark-mode .result-card.fraud {
    background-color: #451a03;
    /* Darker background for fraud in dark mode (example) */
    border-color: var(--danger-color);
    /* Uses danger color variable */
    color: var(--danger-color);
    /* Use danger color for text in dark mode */
}


.result-card.safe {
    background-color: #dcfce7;
    /* Light theme safe background */
    border: 1px solid var(--success-color);
    /* Uses success color variable */
    color: var(--success-color);
    /* Text color for safe in light mode */
}

/* Dark mode overrides for safe result card */
body.dark-mode .result-card.safe {
    background-color: #16a34a33;
    /* Semi-transparent success green (example) */
    border-color: var(--success-color);
    /* Uses success color variable */
    color: var(--success-color);
    /* Use success color for text in dark mode */
}


.result-card.warning {
    background-color: #fef3c7;
    /* Light theme warning background */
    border: 1px solid var(--warning-color);
    /* Border color uses the variable */
    color: var(--warning-color);
    /* Text color uses the variable */
}

/* Dark mode overrides for warning result card */
body.dark-mode .result-card.warning {
    background-color: var(--card-background);
    /* <-- Use DEFAULT card background */
    border-color: var(--warning-color);
    /* <-- Use amber variable for border */
    color: var(--text-color);
    /* <-- Use default light gray text color for p and li */
}

/* Specific text color for H3 inside warning result card in dark mode */
body.dark-mode .result-card.warning h3 {
    color: var(--primary-color);
    /* <-- Set H3 color to blue */
}


/* --- Status Badge State Styles --- */
.status-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.8rem;
    font-weight: bold;
    text-transform: uppercase;
    white-space: nowrap;
    border: 1px solid transparent;
    /* Default border */
}

.status-badge.fraud {
    background-color: #fee2e2;
    color: var(--danger-color);
    border-color: var(--danger-color);
    /* Added border color */
}

body.dark-mode .status-badge.fraud {
    background-color: #ef444433;
    color: var(--danger-color);
    border-color: var(--danger-color);
}

.status-badge.safe {
    background-color: #dcfce7;
    color: var(--success-color);
    border-color: var(--success-color);
    /* Added border color */
}

body.dark-mode .status-badge.safe {
    background-color: #22c55e33;
    color: var(--success-color);
    border-color: var(--success-color);
}

.status-badge.warning {
    background-color: #fef3c7;
    color: var(--warning-color);
    border-color: var(--warning-color);
    /* Added border color */
}

body.dark-mode .status-badge.warning {
    background-color: #f59e0b33;
    color: var(--warning-color);
    border-color: var(--warning-color);
}

/* Badge for 'Unknown' or 'Info' status in history */
.status-badge.info {
    background-color: #e0f7fa; /* Light cyan */
    color: var(--info-color); /* Info color */
    border-color: var(--info-color); /* Info color */
}

body.dark-mode .status-badge.info {
    background-color: #0f343d; /* Darker background for info in dark mode */
    color: var(--info-color);
    border-color: var(--info-color);
}


.result-details {
    margin-top: 1rem;
}

.risk-factors {
    margin-top: 0.5rem;
    padding-left: 1.5rem;
    color: var(--text-light);
    /* Uses text-light variable */
}

.result-card.fraud .risk-factors li,
.result-card.warning .risk-factors li {
    color: inherit;
}


/* Confidence bar track */
.confidence-bar {
    margin-top: 0.5rem;
    height: 10px;
    background-color: #e5e7eb;
    /* Light gray in light mode */
    border-radius: 5px;
    overflow: hidden;
}

/* Dark mode override for confidence bar track */
body.dark-mode .confidence-bar {
    background-color: #4b5563;
    /* Darker gray in dark mode */
}


.confidence-bar-fill {
    height: 100%;
    background-color: var(--primary-color);
    /* Uses primary color for fill */
    transition: width 0.3s ease;
}

.qr-upload-area {
    border: 2px dashed var(--border-color);
    /* Uses border color variable */
    padding: 2rem;
    text-align: center;
    border-radius: 6px;
    cursor: pointer;
    transition: border-color 0.2s ease;
    color: var(--text-light);
    /* Uses text-light variable */
}

.qr-upload-area:hover {
    border-color: var(--primary-color);
    /* Uses primary color variable */
    color: var(--primary-color);
    /* Uses primary color variable */
}

.qr-image-container {
    margin-top: 1rem;
    text-align: center;
    border: 1px solid var(--border-color);
    /* Uses border color variable */
    padding: 1rem;
    border-radius: 6px;
    background-color: var(--card-background);
    /* Use card background variable */
}

.qr-image-container img {
    max-width: 100%;
    max-height: 300px;
    display: block;
    margin: 0 auto;
}


/* Adjusted button styles for clarity */
button {
    background: var(--primary-color);
    /* Uses primary color variable */
    color: white;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.2s ease, opacity 0.2s ease;
}

button:hover:not(:disabled) {
    background-color: #1d4ed8;
    /* Specific hover color for light mode primary */
}

/* Dark mode hover for primary button */
body.dark-mode button:hover:not(:disabled) {
    background-color: #3b82f6;
    /* Slightly lighter blue for dark mode hover */
}


button:disabled {
    background-color: #9ca3af;
    cursor: not-allowed;
    opacity: 0.7;
}

/* Dark mode disabled button */
body.dark-mode button:disabled {
    background-color: #4b5563;
    /* Uses darker color for disabled in dark mode */
}


.toggle-form {
    text-align: center;
    margin-top: 1rem;
    color: var(--text-light);
    /* Uses text-light variable */
}

.toggle-form span {
    color: var(--primary-color);
    /* Uses primary color variable */
    cursor: pointer;
    text-decoration: underline;
}

.toggle-form span:hover {
    text-decoration: none;
}

/* --- History List Item Styles (Updated for Flexbox and Timestamp) --- */
.history-list {
    list-style: none;
    padding: 0;
    margin-top: 1rem;
}

.history-item {
    display: flex;
    justify-content: space-between; /* Spreads out content */
    align-items: center; /* Vertically centers */
    /* Keep existing padding, border-bottom, font-size, color */
    padding: 0.75rem; /* Ensure this padding exists */
    border-bottom: 1px solid var(--border-color); /* Ensure this border exists */
    font-size: 0.9rem; /* Ensure this font-size exists */
    color: var(--text-color); /* Ensure this color exists */
    /* Remove word-break from .history-item if present, apply to inner span */
}

.history-item:last-child {
    border-bottom: none;
}

/* Style for the container span holding item data and timestamp */
.history-item > span:first-child {
    flex-grow: 1; /* Allows this section to fill space */
    margin-right: 10px; /* Space before the badge */
    word-break: break-word; /* Ensure long words break */
    overflow-wrap: break-word; /* Fallback */
    display: block; /* Make this a block element to ensure timestamp is below or on a new line */
}

/* Style for the actual item data span (inside the container span) */
.history-item > span:first-child > span:first-child {
    /* If you need specific styles for the URL text itself */
    word-break: break-word; /* Redundant but safe */
    overflow-wrap: break-word;
}


/* Style for the timestamp span */
.history-item .history-timestamp {
    font-size: 0.75em; /* Smaller text */
    color: var(--text-light); /* Lighter color */
    margin-top: 3px; /* Space above the timestamp */
    white-space: nowrap; /* Prevent timestamp string from breaking across lines */
    flex-shrink: 0; /* Prevent the timestamp from shrinking */
    display: block; /* Ensure it's on a new line below the item data */
    /* If you want it inline next to the data, change display to inline or inline-block */
    /* In that case, you might need margin-left instead of margin-top */
}


/* Style for the delete button */
.delete-history-item {
    background: none;
    border: none;
    color: var(--text-light);
    font-size: 1rem;
    cursor: pointer;
    margin-left: 10px;
    /* Space before the delete button */
    transition: color 0.2s ease, transform 0.2s ease;
    padding: 0;
    flex-shrink: 0;
    /* Prevent the delete button from shrinking */
}

.delete-history-item:hover {
    color: var(--danger-color);
    transform: scale(1.2);
}


/* Clear History Button Style (within the card) */
.card .button {
    margin-top: 1.5rem;
    width: auto;
    /* Don't force full width */
    display: inline-block;
    /* Allows it to sit next to other elements if space permits */
}


/* --- History Controls (Filters/Export) Styles --- */
.history-controls {
    display: flex;
    flex-wrap: wrap;
    /* Allow items to wrap on smaller screens */
    gap: 10px;
    /* Space between filter groups and buttons */
    margin-bottom: 1rem;
    /* Space below controls */
    align-items: flex-end;
    /* Align items to the bottom */
}

.history-controls .filter-group {
    display: flex;
    flex-direction: column;
    /* Stack label and select */
    flex-grow: 1;
    /* Allow filter groups to grow */
    min-width: 120px;
    /* Minimum width for filter group */
}

.history-controls .filter-group label {
    font-size: 0.9rem;
    margin-bottom: 0.3rem;
    color: var(--text-color);
    font-weight: bold;
}

.history-controls .filter-group select {
    padding: 0.5rem;
    /* Adjust padding for smaller controls */
    font-size: 0.9rem;
    /* Adjust font size */
    height: 38px;
    /* Match button height roughly */
}

.history-controls .button-small {
    /* Inherits button-small styles */
    margin-top: 0.5rem;
    /* Add a little space above buttons if items wrap */
    height: 38px;
    /* Give buttons a fixed height */
}

/* --- Media Queries --- */

/* Media query for screen widths up to 1190px */
@media (max-width: 1190px) {
    .header {
        /* Change header to a flex column layout for stacking */
        display: flex;
        flex-direction: column;
        align-items: center;
        /* Center children horizontally */
        /* Reduce padding below header text slightly if needed */
        padding-bottom: 0.5rem;
        gap: 0.5rem;
        /* Add space between stacked items */
        text-align: center;
        /* Ensure text stays centered in flex mode */
    }

    .header h1 {
        font-size: 1.8rem;
        /* Slightly smaller heading */
        margin-bottom: 0;
        /* Reset margin when using gap */
    }

    .header p {
        margin-bottom: 0;
        /* Reset margin when using gap */
    }

    .auth-section {
        position: static;
        /* Remove absolute positioning */
        width: 100%;
        /* Allow to take full width */
        justify-content: center;
        /* Center buttons horizontally */
        margin-top: 0.5rem;
        /* Add some space above the stacked auth section */
        /* Reset absolute positioning properties */
        top: auto;
        right: auto;
        display: flex;
        /* Ensure flex display for internal layout */
        align-items: center;
        /* Align internal items */
        flex-wrap: wrap;
        /* Allow internal items to wrap if needed */
        gap: 10px;
        /* Space between internal items */
    }

    /* Adjust gap within auth-section if needed */
    #user-status {
        gap: 5px;
        /* Ensure status flex items align */
        display: flex;
        align-items: center;
    }

    #auth-forms {
        gap: 10px;
        /* Ensure forms flex items align */
        display: flex;
        align-items: center;
    }
}

/* Media query for screen widths up to 768px (existing, adjusted) */
@media (max-width: 768px) {
    body {
        padding: 1rem;
    }

    .main-content {
        grid-template-columns: 1fr;
        gap: 1rem;
    }

    .header {
        padding: 1rem;
    }

    .header h1 {
        font-size: 1.5rem;
    }

    .header p {
        font-size: 1rem;
    }

    /* Auth section stacking handled by 1190px breakpoint, ensure margin is correct */
    .auth-section {
        margin-top: 1rem;
        /* Ensure sufficient space below text content */
        flex-direction: column;
        /* Stack user status and auth forms vertically */
        align-items: stretch;
        /* Stretch internal items to full width */
        gap: 10px;
        /* Space between stacked items */
    }

    #user-status,
    #auth-forms {
        width: 100%;
        /* Make internal containers take full width */
        justify-content: center;
        /* Center content inside internal containers */
        gap: 10px;
        /* Keep gap for items within status/forms */
    }


    /* Adjust history controls for small screens */
    .history-controls {
        flex-direction: column;
        /* Stack filters and buttons */
        align-items: stretch;
        /* Stretch items to full width */
        gap: 5px;
        /* Reduce gap on smaller screens */
    }

    .history-controls .filter-group {
        flex-grow: 0;
        /* Don't grow */
        min-width: auto;
        /* Remove min-width */
        width: 100%;
        /* Take full width */
    }

    .history-controls .filter-group label {
        margin-bottom: 0.1rem;
        /* Reduce space below label */
    }

    .history-controls .filter-group select,
    .history-controls .button-small {
        width: 100%;
        /* Make select and buttons full width */
        margin-top: 0;
        /* Remove extra margin */
    }

    .history-controls .button-small {
        margin-bottom: 0.5rem;
        /* Add space below buttons */
    }
}

@media (max-width: 1190px) {
    .header {
        /* Change header to a flex column layout for stacking */
        display: flex;
        flex-direction: column;
        align-items: center;
        /* Center children horizontally */
        /* Reduce padding below header text slightly if needed */
        padding-bottom: 0.5rem;
        gap: 0.5rem;
        /* Add space between stacked items */
        text-align: center;
        /* Ensure text stays centered in flex mode */
    }

    .header h1 {
        font-size: 1.8rem;
        /* Slightly smaller heading */
        margin-bottom: 0;
        /* Reset margin when using gap */
    }

    .header p {
        margin-bottom: 0;
        /* Reset margin when using gap */
    }

    .auth-section {
        position: static;
        /* Remove absolute positioning */
        width: 100%;
        /* Allow to take full width */
        justify-content: center;
        /* Center buttons horizontally */
        margin-top: 0.5rem;
        /* Add some space above the stacked auth section */
        /* Reset absolute positioning properties */
        top: auto;
        right: auto;
        display: flex;
        /* Ensure flex display for internal layout */
        align-items: center;
        /* Align internal items */
        flex-wrap: wrap;
        /* Allow internal items to wrap if needed */
        gap: 10px;
        /* Space between internal items */
    }

    /* Adjust gap within auth-section if needed */
    #user-status {
        gap: 5px;
        /* Ensure status flex items align */
        display: flex;
        align-items: center;
    }

    #auth-forms {
        gap: 10px;
        /* Ensure forms flex items align */
        display: flex;
        align-items: center;
    }
}